{"version":3,"sources":["webpack:///./src/app/services/api.service.ts","webpack:///./src/app/tab1/tab1.module.ts","webpack:///./src/app/tab1/tab1.page.html","webpack:///./src/app/tab1/tab1.page.scss","webpack:///./src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","file":"tab1-tab1-module.js","sourcesContent":["import { OfflineManagerService } from './offline-manager.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NetworkService, ConnectionStatus } from './network.service';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Observable, from } from 'rxjs';\r\nimport { tap, map, catchError } from \"rxjs/operators\";\r\n\r\nconst API_STORAGE_KEY = 'specialkey';\r\nconst API_URL = 'https://reqres.in/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n  private http: HttpClient,\r\n  private networkService: NetworkService,\r\n  private storage: Storage,\r\n  private offlineManager: OfflineManagerService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n  async handleRequest(data, key) {\r\n\r\n  this.offlineManager.storeRequest(data, key);\r\n\r\n\r\n  }\r\n\r\n  async getRequest(key) {\r\n\r\n    return this.offlineManager.retrieveRequest(key);\r\n\r\n  }\r\n\r\n  async clearStorage(key) {\r\n\r\n    return this.offlineManager.clearOne(key);\r\n\r\n    }\r\n\r\n\r\n}","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab1Page } from './tab1.page';\r\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\r\n  ],\r\n  declarations: [Tab1Page]\r\n})\r\nexport class Tab1PageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Add Measurement\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- <ion-content padding class = \\\"background-image\\\"> -->\\r\\n<ion-content>\\r\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" >\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Gauge ID</ion-label>\\r\\n        <ion-input placeholder=\\\"Enter Lake ID Here if Offline\\\" type=\\\"text\\\"  [(ngModel)]=\\\"nearestGaugeID\\\" name=\\\"gauge_id\\\"></ion-input>\\r\\n        <ion-select  [(ngModel)]=\\\"nearestGaugeIncID\\\" (ionChange) = \\\"OnChange($event)\\\" name=\\\"gauge_inc_id\\\">\\r\\n          <ion-select-option *ngFor=\\\"let gauge of gauges\\\" value=\\\"{{gauge.id}}\\\">{{gauge.gauge_id + ' - ' + gauge.name + ' - ' + gauge.city}}</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n  \\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Height in {{units}} </ion-label>\\r\\n        <ion-input type=\\\"number\\\" ngModel name=\\\"height\\\" required></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Date</ion-label>\\r\\n        <ion-input type=\\\"date\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\"  required></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Time</ion-label>\\r\\n        <ion-input type=\\\"time\\\" [(ngModel)]=\\\"time\\\" name=\\\"time\\\" required></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\" >Is Bubble Level Okay?</ion-label>\\r\\n        <ion-select [(ngModel)]=\\\"isBubbleLevelOkay\\\" name=\\\"is_bubble_level_okay\\\" required>\\r\\n          <ion-select-option value=\\\"Yes\\\" selected>Yes</ion-select-option>\\r\\n          <ion-select-option value=\\\"No\\\">No</ion-select-option>\\r\\n          <ion-select-option value=\\\"I Do Not Know\\\">I Don't Know</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\" >Notes</ion-label>\\r\\n        <ion-input type=\\\"textarea\\\" ngModel name=\\\"notes\\\"></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" [disabled] =\\\"!f.valid\\\">Add Measurement</ion-button>\\r\\n   <!-- <ion-button click= \\\"presentAlert();\\\" color=\\\"primary\\\" expand=\\\"block\\\" [disabled] =\\\"!f.valid\\\">Report a problem</ion-button>-->\\r\\n  </form>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <ion-button [href]=\\\"'/gauge-list-map'\\\" expand =\\\"block\\\">Map View</ion-button>\\r\\n  <ion-button (click)= \\\"presentAlert()\\\" expand = \\\"block\\\" color=\\\"danger\\\">Report a problem</ion-button>\\r\\n\\r\\n\\r\\n    \\r\\n</ion-content>\\r\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n#map_canvas {\\n  width: 90%;\\n  height: 80%;\\n  border: 1px solid red; }\\n\\n/*\\r\\n  .background-image {\\r\\n    --background: url('dashboard-2.png');\\r\\n}  \\r\\n*/\\n\\n#address {\\n  padding: 10px;\\n  font-size: 18px;\\n  font-weight: bold; }\\n\\n#map {\\n  width: 100%;\\n  height: 100%; }\\n\\n.map-wrapper {\\n  position: relative; }\\n\\n.map-wrapper #map_center {\\n    position: absolute;\\n    z-index: 99;\\n    height: 40px;\\n    width: 40px;\\n    top: 50%;\\n    left: 50%;\\n    margin-left: -21px;\\n    margin-top: -41px; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMS9DOlxcVXNlcnNcXG5za2plXFxBbmRyb2lkU3R1ZGlvUHJvamVjdHNcXExPQ1NTX1Byb2plY3Qvc3JjXFxhcHBcXHRhYjFcXHRhYjEucGFnZS5zY3NzIiwic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNJLFVBQVU7RUFDVixXQUFXO0VBQ1gscUJBQXFCLEVBQUE7O0FBR3pCOzs7O0NDRUM7O0FESUM7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxrQkFBa0IsRUFBQTs7QUFEcEI7SUFJSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0lBQ1gsUUFBUTtJQUNSLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndlbGNvbWUtY2FyZCBpb24taW1nIHtcclxuICBtYXgtaGVpZ2h0OiAzNXZoO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbiNtYXBfY2FudmFzIHtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBoZWlnaHQ6IDgwJTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcclxuICB9XHJcblxyXG4vKlxyXG4gIC5iYWNrZ3JvdW5kLWltYWdlIHtcclxuICAgIC0tYmFja2dyb3VuZDogdXJsKCdkYXNoYm9hcmQtMi5wbmcnKTtcclxufSAgXHJcbiovXHJcbiBcclxuICAjYWRkcmVzcyB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gICBcclxuICAjbWFwIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICAgXHJcbiAgLm1hcC13cmFwcGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgXHJcbiAgICAjbWFwX2NlbnRlciB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgei1pbmRleDogOTk7XHJcbiAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMjFweDtcclxuICAgICAgbWFyZ2luLXRvcDogLTQxcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4iLCIud2VsY29tZS1jYXJkIGlvbi1pbWcge1xuICBtYXgtaGVpZ2h0OiAzNXZoO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbiNtYXBfY2FudmFzIHtcbiAgd2lkdGg6IDkwJTtcbiAgaGVpZ2h0OiA4MCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDsgfVxuXG4vKlxyXG4gIC5iYWNrZ3JvdW5kLWltYWdlIHtcclxuICAgIC0tYmFja2dyb3VuZDogdXJsKCdkYXNoYm9hcmQtMi5wbmcnKTtcclxufSAgXHJcbiovXG4jYWRkcmVzcyB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuI21hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLm1hcC13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5tYXAtd3JhcHBlciAjbWFwX2NlbnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDk5O1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC0yMXB4O1xuICAgIG1hcmdpbi10b3A6IC00MXB4OyB9XG4iXX0= */\"","\r\n\r\n//\r\n\r\nimport { Component} from '@angular/core';\r\nimport {Geolocation} from '@ionic-native/geolocation/ngx';\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\nimport { NgForm } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\n\r\nimport * as moment from 'moment';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { BoundElementProperty } from '@angular/compiler';\r\nimport { NavController } from '@ionic/angular';\r\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\r\n\r\n//\r\n\r\nimport { Storage } from '@ionic/storage';\r\nimport { ApiService } from '../services/api.service';\r\nimport { NetworkService, ConnectionStatus } from 'src/app/services/network.service';\r\nimport { Network } from '@ionic-native/network/ngx'\r\n//\r\n\r\n\r\nconst URL = 'http://liquidearthlake.org/json/getalldistances/'+35.9049+'/'+-79.0469;\r\n\r\n@Component({\r\n  selector: 'app-tab1',\r\n  templateUrl: 'tab1.page.html',\r\n  styleUrls: ['tab1.page.scss']\r\n})\r\nexport class Tab1Page{\r\n\r\n\r\n  //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n  //Add 'implements OnInit' to the class.\r\n  isGeoLocationFound:boolean;\r\n  nearestGauge:any;\r\n  nearestGaugeID:string;\r\n  nearestGaugeIncID:number;\r\n\r\n  height_data:any;\r\n  units = \"Centimeters\";\r\n\r\n  gauges=[];\r\n  date:any;\r\n  time:any;\r\n  isBubbleLevelOkay:string;\r\n  gauge_data:any;\r\n  problem_data:any;\r\n  value = 0 ;\r\n  db = 0;\r\n\r\n  constructor (\r\n    private geolocation:Geolocation,\r\n    private alertController:AlertController,\r\n    private http:HttpClient,\r\n    private toastCtrl: ToastController, \r\n    private router:Router,\r\n    private emailcomposer: EmailComposer,\r\n    private navCtrl: NavController,\r\n\r\n    private networkService:NetworkService,\r\n    private network: Network,\r\n    private apiService: ApiService,\r\n\r\n    )\r\n    {\r\n\r\n        //subscribes to network to send all requests on connect\r\n      //this.network.onConnect().subscribe(() => {\r\n\r\n      //        this.sendSaved();\r\n\r\n       //     });\r\n\r\n    }\r\n\r\n  ngOnInit(){\r\n\r\n    this.getCurrentDateTime()\r\n    this.getAllGauges();\r\n    this.getLocation();\r\n    this.setUnits(this.nearestGaugeIncID)\r\n    \r\n    if(!this.isGeoLocationFound){\r\n        //this.presentAlertPrompt();\r\n    }\r\n    else{\r\n    }\r\n\r\n          this.network.onConnect().subscribe(() => {\r\n\r\n            this.sendSaved();\r\n\r\n          });\r\n\r\n    \r\n  }\r\n\r\n  async presentAlert(){\r\n\r\n    const alert = await this.alertController.create({\r\n\r\n        header: 'Report a problem',\r\n        message: 'Please enter the Gauge ID and Problem',\r\n        inputs: [\r\n          {\r\n            name: 'gauge_id',\r\n            type: 'text',\r\n            placeholder: 'Gauge ID'\r\n          }, \r\n          {\r\n            name: 'problem',\r\n            type: 'text',\r\n            placeholder: 'Problem'\r\n          }\r\n         \r\n        ],        \r\n        buttons: [\r\n          {\r\n            text: 'Cancel',\r\n            role: 'cancel',\r\n            cssClass: 'secondary',\r\n            handler: () => {\r\n              console.log('Confirm Cancel');\r\n            }\r\n          }, {\r\n            text: 'SUBMIT',\r\n            handler: data => {\r\n\r\n                this.gauge_data = data.gauge_id;\r\n                this.problem_data = data.problem;\r\n                console.log(this.gauge_data);\r\n                console.log(this.problem_data);\r\n\r\n\r\n                let email = {\r\n\r\n                    to: 'dipayan5175@gmail.com',\r\n                    subject: 'LOCSS App Issue',\r\n                    body: 'Gauge ID: ' + this.gauge_data + '  Problem: ' + this.problem_data,\r\n                    isHTML: true\r\n              \r\n\r\n                }\r\n                console.log(email);\r\n                console.log('Successfully updated');\r\n\r\n                this.emailcomposer.open(email);\r\n                console.log('Successfully sent');\r\n             \r\n            }\r\n          }\r\n        ]\r\n\r\n    });\r\n\r\n      await alert.present();\r\n  }\r\n\r\n\r\n  getCurrentDateTime(){\r\n      let date = new Date();\r\n      this.date=moment().format('YYYY-MM-DD');\r\n      this.time=moment().format('HH:mm');\r\n      this.isBubbleLevelOkay=\"Yes\";\r\n      console.log(this.date);\r\n      console.log(this.time);\r\n  }\r\n\r\n \r\n\r\n \r\n\r\n  // Get The  Geolocation\r\n  \r\n  getLocation(){\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      this.isGeoLocationFound=true;\r\n      this.http.get('http://liquidearthlake.org/json/getnearestgauge/'+resp.coords.latitude+'/'+resp.coords.longitude)\r\n      .subscribe((data : any) =>\r\n      {\r\n\r\n\r\n          console.log(data);\r\n          this.nearestGauge=data;\r\n          this.nearestGaugeID=data.gauge_id;\r\n          this.nearestGaugeIncID=data.id;\r\n          console.log(this.nearestGaugeIncID);\r\n        \r\n      },\r\n      (error : any) =>\r\n      {\r\n        console.log(error);\r\n      });\r\n      console.log(resp.coords.latitude);\r\n      console.log(resp.coords.longitude);\r\n      // resp.coords.latitude\r\n      // resp.coords.longitude\r\n     }).catch((error) => {\r\n       this.isGeoLocationFound=false;\r\n       console.log('Error getting location', error);\r\n     });\r\n\r\n  }\r\n\r\n  // Present the Add Gauge prompt when geolocation is not found\r\n  /*async presentAlertPrompt() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Please Enter the Gauge ID',\r\n      inputs: [\r\n        {\r\n          name: 'gauge_id',\r\n          type: 'text',\r\n          placeholder: 'Gauge ID'\r\n        }\r\n       \r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('Confirm Cancel');\r\n          }\r\n        }, {\r\n          text: 'SUBMIT',\r\n          handler: data => {\r\n            this.nearestGaugeID=data.gauge_id;\r\n            console.log(this.nearestGaugeID);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  \r\n    await alert.present();\r\n  }\r\n*/\r\n  getAllGauges(){\r\n    this.http.get('http://liquidearthlake.org/json/gauges')\r\n    .subscribe((data : any) =>\r\n    {\r\n      this.gauges=data;\r\n      console.log('Data printed here.');\r\n      console.log(data);\r\n      \r\n    },\r\n    (error : any) =>\r\n    {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  async onSubmit(form:NgForm){\r\n  // Check Network Status before creating toast\r\n  //If Offline, Create Toast to indicate data will be sent when online again.\r\n\r\n\r\n    let status = this.networkService.getCurrentNetworkStatus();\r\n\r\n    if(status === ConnectionStatus.Online)\r\n    {\r\n\r\n    console.log('Connected to Network. Submitting Information');\r\n\r\n\r\n\r\n\r\n    let toast = await this.toastCtrl.create({\r\n      message: 'Data submitted successfuly',\r\n      duration: 2000,\r\n      position: \"bottom\"\r\n    });\r\n\r\n    toast.present();\r\n\r\n    this.nearestGauge= this.gauges.filter(m => m.id == form.value['gauge_inc_id']);\r\n    console.log(form);\r\n\r\n    //API CALL\r\n\r\n    console.log('Check Console Here');\r\n    console.log(form.value);\r\n    console.log('Data JSON Form');\r\n    let result = form.value;\r\n    console.log(JSON.stringify({result}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\"http://liquidearthlake.org/json/reading/store\", form.value\r\n//\"http://liquidearthlake.org/json/store/offline\", JSON.stringify({result}))\r\n//\"http://liquidearthlake.org/json/store/offline\", result\r\n//\"http://liquidearthlake.org/json/reading/store\", JSON.stringify({result})\r\n\r\n\r\n\r\n\r\n\r\n    this.http.post(\"http://liquidearthlake.org/json/reading/store\", JSON.stringify({result}), {\r\n            headers: { 'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Methods': 'POST'\r\n                }\r\n             })\r\n    .subscribe(response => {\r\n\r\n      console.log('Response is Here');\r\n      console.log(JSON.stringify(response));\r\n     }, error =>  {\r\n          console.log('Error Printed Here');\r\n          console.log(error);\r\n          console.log(JSON.stringify(error));\r\n            });\r\n\r\n    console.log(this.gauges);\r\n\r\n    console.log(this.nearestGauge[0].gauge_id);\r\n    this.router.navigateByUrl('tabs/tab3/'+ form.value['gauge_inc_id']+'/'+ this.nearestGauge[0].gauge_id);\r\n  }\r\n  else\r\n  {\r\n\r\n    console.log('Not connected to Network. Saving submission.');\r\n\r\n\r\n\r\n    // Method to Store Data in Ionic Storage\r\n    // This data must be retrieved whenever the app goes online.\r\n\r\n    this.apiService.handleRequest(form.value, this.db);\r\n    this.db++;\r\n  }\r\n\r\n}\r\n\r\n    async sendSaved() {\r\n\r\n    console.log('Sending any saved requests.')\r\n\r\n    for(this.db; this.db >= 0; this.db--) {\r\n\r\n     this.apiService.getRequest(this.db).then((result) => {\r\n\r\n\r\n               if(result != null) {\r\n               //API CALL\r\n\r\n                   console.log('Sending non-null request');\r\n\r\n                   console.log(result);\r\n                   console.log('Data JSON Form');\r\n                   console.log(JSON.stringify({result}));\r\n\r\n\r\n    this.http.post(\"http://liquidearthlake.org/json/reading/store\", JSON.stringify({result}), {\r\n            headers: { 'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Methods': 'POST'\r\n                }\r\n             })\r\n    .subscribe(response => {\r\n\r\n              console.log('Response is Here');\r\n              console.log(JSON.stringify(response));\r\n     }, error =>  {\r\n                 console.log('Error Printed Here');\r\n                    console.log(error);\r\n                     console.log(JSON.stringify(error));\r\n            });\r\n\r\n                   console .log(this.db);\r\n                   console.log('Request Sent');\r\n\r\n               }\r\n                });\r\n            let toast = await this.toastCtrl.create({\r\n                message: 'Offline Requests Successfully Sent',\r\n                duration: 2000,\r\n                position: \"bottom\"\r\n                                  });\r\n\r\n        this.apiService.clearStorage(this.db);\r\n    }\r\n\r\n    if(this.db < 0) {\r\n    this.db = 0;\r\n    }\r\n}\r\n\r\n\r\n OnChange(event) {\r\n\r\n this.nearestGauge = this.gauges.filter(m => m.id == event.target.value)\r\n this.nearestGaugeID= this.nearestGauge[0].gauge_id;\r\n console.log('New Gauge Value');\r\n console.log(this.nearestGaugeID);\r\n\r\n this.setUnits(event.target.value);\r\n\r\n\r\n\r\n }\r\n\r\n    setUnits(id) {\r\n\r\n             this.http\r\n             .get('http://liquidearthlake.org/json/getgauge/'+id)\r\n               .subscribe((data : any) =>\r\n               {\r\n\r\n               this.height_data=data;\r\n\r\n\r\n\r\n                    if(this.height_data[0].unit == \"FEET\") {\r\n\r\n                        this.units = \"Feet\";\r\n\r\n                    }\r\n                    else if(this.height_data[0].unit == \"METER\") {\r\n\r\n                        this.units = \"Meters\";\r\n\r\n                    }\r\n                    else if(this.height_data[0].unit == \"CENTIMETER\") {\r\n\r\n\r\n                                      this.units = \"Centimeters\";\r\n\r\n                      }\r\n\r\n\r\n                        console.log(this.units);\r\n\r\n               },\r\n               (error : any) =>\r\n               {\r\n                 console.log(error);\r\n               });\r\n\r\n    }\r\n \r\n}\r\n"],"sourceRoot":""}